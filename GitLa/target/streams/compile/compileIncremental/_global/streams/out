[0m[[0m[0mdebug[0m] [0m[0m[zinc] IncrementalCompile -----------[0m
[0m[[0m[0mdebug[0m] [0m[0mIncrementalCompile.incrementalCompile[0m
[0m[[0m[0mdebug[0m] [0m[0mprevious = Stamps for: 15 products, 8 sources, 2 libraries[0m
[0m[[0m[0mdebug[0m] [0m[0mcurrent source = Set(${BASE}/src/main/scala/gitla/add.scala, ${BASE}/src/main/scala/gitla/blob.scala, ${BASE}/src/main/scala/gitla/commit.scala, ${BASE}/src/main/scala/gitla/config_parser.scala, ${BASE}/src/main/scala/gitla/gitla.scala, ${BASE}/src/main/scala/gitla/status.scala, ${BASE}/src/main/scala/gitla/index.scala, ${BASE}/src/main/scala/gitla/init.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m> initialChanges = InitialChanges(Changes(added = Set(), removed = Set(), changed = Set(${BASE}/src/main/scala/gitla/index.scala, ${BASE}/src/main/scala/gitla/add.scala), unmodified = ...),Set(),Set(),API Changes: Set())[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes:[0m
[0m[[0m[0mdebug[0m] [0m[0m	removed: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set(${BASE}/src/main/scala/gitla/index.scala, ${BASE}/src/main/scala/gitla/add.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(gitla.Index, gitla.Add)[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(gitla.Index, gitla.Add)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(${BASE}/src/main/scala/gitla/index.scala, ${BASE}/src/main/scala/gitla/add.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: gitla.Index, gitla.Add[0m
[0m[[0m[0mdebug[0m] [0m[0mcompilation cycle 1[0m
[0m[[0m[0minfo[0m] [0m[0mcompiling 2 Scala sources to /home/pradee/optboot/class/lang/gitla/GitLa/target/scala-3.6.2/classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mReturning already retrieved and compiled bridge: /home/pradee/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala3-sbt-bridge/3.6.2/scala3-sbt-bridge-3.6.2.jar.[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 124e26cd for Scala Compiler version 3.6.2[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/home/pradee/optboot/class/lang/gitla/GitLa/target/scala-3.6.2/classes:/home/pradee/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala3-library_3/3.6.2/scala3-library_3-3.6.2.jar:/home/pradee/.cache/coursier/v1/https/repo1.maven.org/maven2/com/typesafe/config/1.4.2/config-1.4.2.jar:/home/pradee/.cache/coursier/v1/https/repo1.maven.org/maven2/org/scala-lang/scala-library/2.13.15/scala-library-2.13.15.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 5.052751101 s[0m
[0m[[0m[0mdebug[0m] [0m[0mdone compiling[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from gitla.Index...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: gitla.Index[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(gitla.Index)[0m
[0m[[0m[0mdebug[0m] [0m[0mThe following modified names cause invalidation of gitla.Add: [UsedName(removeFromIndex,[Default]), UsedName(readIndex,[Default]), UsedName(updateIndex,[Default])][0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(gitla.Index,ModifiedNames(changes = UsedName(readIndex,[Default]), UsedName(isFileInIndex,[Default]), UsedName(updateIndex,[Default]), UsedName(writeIndex,[Default]), UsedName(removeFromIndex,[Default]))) invalidates 2 classes due to The gitla.Index has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(readIndex,[Default]), UsedName(isFileInIndex,[Default]), UsedName(updateIndex,[Default]), UsedName(writeIndex,[Default]), UsedName(removeFromIndex,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m  > by transitive inheritance: Set(gitla.Index)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m  > by member reference: Set(gitla.Add)[0m
[0m[[0m[0mdebug[0m] [0m[0m  > [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	gitla.Add[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: gitla.Add[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding gitla.Gitla by gitla.Add[0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0mFinal step, transitive dependencies:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set(gitla.Add)[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: gitla.Index, gitla.Add[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding gitla.Add by gitla.Index[0m
[0m[[0m[0mdebug[0m] [0m[0mIncluding gitla.Gitla by gitla.Add[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated macros due to upstream dependencies change: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mNo classes were invalidated.[0m
